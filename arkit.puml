@startuml

scale max 1920 width
left to right direction

skinparam nodesep 18
skinparam ranksep 37
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName Tahoma
skinparam defaultFontSize 12
skinparam roundCorner 6
skinparam dpi 150
skinparam arrowColor black
skinparam arrowThickness 0.5
skinparam packageTitleAlignment left

' oval
skinparam usecase {
  borderThickness 0.5
}

' rectangle
skinparam rectangle {
  borderThickness 0.5
}

' component
skinparam component {
  borderThickness 1
}


package "Index" {
  (<b>index</b>)
}

package "App" {
  (app)
}

package "Routes" {
  (category.route)
  (product.route)
  (productPromotion.route)
  (shop.route)
  (shopPromotion.route)
  (user.route)
}


package "Controllers" {
  (category.controller)
  (error.controller)
  (product.controller)
  (productPromotion.controller)
  (shop.controller)
  (shopPromotion.controller)
  (user.controller)
}

package "Models" {
  (category.model)
  (product.model)
  (productPromotion.model)
  (shop.model)
  (shopPromotion.model)
  (user.model)
}

package "Utils" {
  (emails.util)
  (getProductAlias.util)
  (getSlug.util)
  (isProductSlugIncluded.util)
  (password.util)
  (tryCatch.util)
}

package "Middlewares" {
  (authorization.middleware)
}

package "Constants" {
  (httpStatusCodes)
  (httpStatusMessages)
  (productAliases)
  (sites)
  (variables)
}

(app) --> (authorization.middleware)
(app) --> (category.route)
(app) --> (error.controller)
(app) --> (product.route)
(app) --> (productPromotion.route)
(app) --> (shop.route)
(app) --> (shopPromotion.route)
(app) --> (user.route)
(authorization.middleware) --> (httpStatusCodes)
(authorization.middleware) --> (tryCatch.util)
(authorization.middleware) --> (user.model)
(authorization.middleware) --> (variables)
(category.controller) --> (category.model)
(category.controller) --> (httpStatusCodes)
(category.controller) --> (httpStatusMessages)
(category.controller) --> (tryCatch.util)
(category.route) --> (category.controller)
(emails.util) --> (httpStatusCodes)
(emails.util) --> (variables)
(error.controller) --> (httpStatusCodes)
(error.controller) --> (httpStatusMessages)
(getProductAlias.util) --> (productAliases)
(<b>index</b>) -[thickness=1]> (app)
(<b>index</b>) -[thickness=1]> (variables)
(isProductSlugIncluded.util) ..> (getProductAlias.util)
(isProductSlugIncluded.util) ..> (getSlug.util)
(product.controller) --> (category.model)
(product.controller) --> (getSlug.util)
(product.controller) --> (httpStatusCodes)
(product.controller) --> (httpStatusMessages)
(product.controller) --> (isProductSlugIncluded.util)
(product.controller) --> (product.model)
(product.controller) --> (shop.model)
(product.controller) --> (sites)
(product.controller) --> (tryCatch.util)
(product.controller) --> (user.model)
(product.route) --> (product.controller)
(productPromotion.controller) --> (httpStatusCodes)
(productPromotion.controller) --> (httpStatusMessages)
(productPromotion.controller) --> (product.model)
(productPromotion.controller) --> (productPromotion.model)
(productPromotion.controller) --> (tryCatch.util)
(productPromotion.route) --> (productPromotion.controller)
(shop.controller) --> (httpStatusCodes)
(shop.controller) --> (httpStatusMessages)
(shop.controller) --> (shop.model)
(shop.controller) --> (tryCatch.util)
(shop.route) --> (shop.controller)
(shopPromotion.controller) --> (httpStatusCodes)
(shopPromotion.controller) --> (httpStatusMessages)
(shopPromotion.controller) --> (shop.model)
(shopPromotion.controller) --> (shopPromotion.model)
(shopPromotion.controller) --> (tryCatch.util)
(shopPromotion.route) --> (shopPromotion.controller)
(user.controller) --> (emails.util)
(user.controller) --> (httpStatusCodes)
(user.controller) --> (httpStatusMessages)
(user.controller) --> (tryCatch.util)
(user.controller) --> (user.model)
(user.controller) --> (variables)
(user.model) --> (password.util)
(user.route) --> (authorization.middleware)
(user.route) --> (user.controller)

@enduml

' View and edit on https://arkit.pro